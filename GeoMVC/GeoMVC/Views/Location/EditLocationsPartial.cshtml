@{
    var grid = Html.DevExpress().GridView(
        settings =>
        {
            settings.Name = "gvEditing";
            settings.KeyFieldName = "Id";
            settings.CallbackRouteValues = new { Controller = "Location", Action = "EditLocationsPartial" };
            settings.CustomActionRouteValues = new { Controller = "Location", Action = "ChangeEditModePartial" };
            settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Location", Action = "EditModesAddNewPartial"};
            settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Location", Action = "EditModesUpdatePartial"};
            settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Location", Action = "EditModesDeletePartial"};
            settings.SettingsEditing.Mode = GeoMVC.Controllers.GridViewDemosHelper.EditMode;
            settings.SettingsBehavior.ConfirmDelete = true;
            settings.SettingsPopup.EditForm.Width = 600;

            settings.CommandColumn.Visible = true;
            settings.CommandColumn.NewButton.Visible = true;
            settings.CommandColumn.DeleteButton.Visible = true; // It is ready for the true state.
            settings.CommandColumn.EditButton.Visible = true;

            settings.Columns.Add("ZipCode");
            settings.Columns.Add("Address");
            //settings.Columns.Add("ParkingLot");
            settings.Columns.Add(column => {
                column.FieldName = "ParkingLot";

                column.ColumnType = MVCxGridViewColumnType.SpinEdit;
                var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
                spinEditProperties.NumberType = SpinEditNumberType.Integer;
                spinEditProperties.MinValue = 0;
                spinEditProperties.MaxValue = 10000;
            });

            settings.Columns.Add(column =>
            {
                column.Caption = "Counted cars.";
                column.SetDataItemTemplateContent(c =>
                {
                    using(var data = new GeoWPFCreateDbTest.BL.Provider.Provider())
                    {
                        var obj = DataBinder.Eval(c.DataItem, "Id");
                        if (obj != null)
                        {
                            int locationId = int.Parse(obj.ToString());
                            int carCount = data.CarRepository.GetCarsByLocationId(locationId).Count;
                            int parkingLot = (int)DataBinder.Eval(c.DataItem, "ParkingLot");
                            if (parkingLot <= carCount)
                            {
                                ViewContext.Writer.Write("It is full. ({0})", carCount);
                            }
                            else 
                            {
                                ViewContext.Writer.Write(string.Format("{0}", carCount));
                            }
                            
                        }
                        else
                        {
                            ViewContext.Writer.Write("Not defined.");
                        }
                        
                        
                    }

                }
                );

                column.SetEditItemTemplateContent(c =>
                {
                    using (var data = new GeoWPFCreateDbTest.BL.Provider.Provider())
                    {
                        var obj = DataBinder.Eval(c.DataItem, "Id");
                        if (obj != null)
                        {
                            int locationId = int.Parse(obj.ToString());
                            int carCount = data.CarRepository.GetCarsByLocationId(locationId).Count;
                            int parkingLot = (int)DataBinder.Eval(c.DataItem, "ParkingLot");
                            if (parkingLot <= carCount)
                            {
                                ViewContext.Writer.Write("It is full. ({0})", carCount);
                            }
                            else
                            {
                                ViewContext.Writer.Write(string.Format("{0}", carCount));
                            }

                        }
                        else
                        {
                            ViewContext.Writer.Write("Not defined.");
                        }
                    }

                }
                );

                column.Visible = true;
            }
            );
            
           @* settings.PreRender = (sender, e) => {
                ((MVCxGridView)sender).ForceDataRowType(typeof(System.Activities.Location));
            };
            *@
    
            
            //settings.PreRender = (sender, e) =>
            //{
            //    ((MVCxGridView)sender).StartEdit(1);
            //};
        });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}

@grid.Bind(Model).GetHtml()