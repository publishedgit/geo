@{
    var grid = Html.DevExpress().GridView(
        settings =>
        {
            settings.Name = "gvEditing";
            settings.KeyFieldName = "Id";
            settings.CallbackRouteValues = new { Controller = "Car", Action = "EditCarPartial" };
            settings.CustomActionRouteValues = new { Controller = "Car", Action = "ChangeEditModePartial" };
            settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Car", Action = "EditModesAddNewPartial"};
            settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Car", Action = "EditModesUpdatePartial"};
            settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Car", Action = "EditModesDeletePartial"};
            settings.SettingsEditing.Mode = GeoMVC.Controllers.GridViewDemosHelper.EditMode;
            settings.SettingsBehavior.ConfirmDelete = true;
            settings.SettingsPopup.EditForm.Width = 600;

            settings.CommandColumn.Visible = true;
            settings.CommandColumn.NewButton.Visible = true;
            settings.CommandColumn.DeleteButton.Visible = true; // It is ready for the true state.
            settings.CommandColumn.EditButton.Visible = true;

            settings.Columns.Add("Made");
            settings.Columns.Add("Type");
            settings.Columns.Add(column => {
                column.FieldName = "ProductionTime";

                column.ColumnType = MVCxGridViewColumnType.DateEdit;
                var spinEditProperties = column.PropertiesEdit as DateEditProperties;
            });

            settings.Columns.Add(column =>
            {
                column.Caption = "Vintage";
                column.SetDataItemTemplateContent(c =>
                {
                    if (DataBinder.Eval(c.DataItem, "ProductionTime") != null)
                    {
                        ViewContext.Writer.Write(
                        string.Format("{0}",
                        System.Data.Linq.SqlClient.SqlMethods.DateDiffYear(
                        ((DateTime)DataBinder.Eval(c.DataItem, "ProductionTime")).Date, DateTime.Now))
                        );
                    }
                    else
                    {
                        ViewContext.Writer.Write("0");
                    }
                }
                );

                column.SetEditItemTemplateContent(c =>
                {
                    if (DataBinder.Eval(c.DataItem, "ProductionTime") != null)
                    {
                        ViewContext.Writer.Write(
                        string.Format("{0}",
                        System.Data.Linq.SqlClient.SqlMethods.DateDiffYear(
                        ((DateTime)DataBinder.Eval(c.DataItem, "ProductionTime")).Date, DateTime.Now))
                        );
                    }
                    else
                    {
                        ViewContext.Writer.Write("0");
                    }
                }
                );

                column.Visible = true;
            }
            );
            settings.Columns.Add("Condition");
            settings.Columns.Add("NumberOfOwners");

            
            
            
            settings.Columns.Add(column =>
                {
                    column.FieldName = "Location.Id";
                    column.Caption = "Location";

                    column.ColumnType = MVCxGridViewColumnType.ComboBox;
                    var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
                    using(var data = new GeoWPFCreateDbTest.BL.Provider.Provider())
                    {
                        var dataSource = data.LocationRepository.GetAllLocation()
                            .Where(x => x.ParkingLot > data.CarRepository.GetCarsByLocationId(x.Id).Count)
                         ;

                        comboBoxProperties.DataSource = dataSource;
                        
                        
                    }
                    comboBoxProperties.Columns.Add("ZipCode");
                    comboBoxProperties.Columns.Add("Address");
                    comboBoxProperties.TextField = comboBoxProperties.TextFormatString = "{0} {1}";
                    
                    comboBoxProperties.ValueField = "Id";
                    comboBoxProperties.ValueType = typeof(int);
                     
                    column.SetDataItemTemplateContent(c =>
                        {
                            ViewContext.Writer.Write(
                            string.Format("{0} {1}",
                            DataBinder.Eval(c.DataItem, "Location.ZipCode"), DataBinder.Eval(c.DataItem, "Location.Address")
                            )
                        );
                        }
                        );  
                }
                );

            
            
        });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}

@grid.Bind(Model).GetHtml()